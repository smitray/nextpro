{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,2LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2CADR,4CAGA,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,iJACP,mBAAKC,IAAI,eAAeC,IAAI,kFACjC,uBAAK,sBAAMF,WAAW,OAAU,CAC5B,UAAa,wBADZ,mW,kLAsBTJ,EAAWO,gBAAiB","file":"component---readme-md-ca0bee6735e2cd706d16.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/smit/public_html/vidyasagar-university-proto-02/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"vidyasagar-university-ums-documentation\"\n    }}>{`Vidyasagar University, UMS Documentation`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.codacy.com/manual/smitray/nextpro?utm_source=github.com&utm_medium=referral&utm_content=smitray/nextpro&utm_campaign=Badge_Grade\"\n      }}><img alt=\"Codacy Badge\" src=\"https://api.codacy.com/project/badge/Grade/60f4004b9e174f05bca20f6669d697ec\" /></a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import request from 'supertest';\nimport app from 'core';\n\n\ndescribe('demo test', () => {\n  afterAll((done) => {\n    app.close(done);\n  });\n\n  it('Test boy', async () => {\n    const response = await request(app.callback()).get('/api/test');\n    expect(response.status).toBe(200);\n    expect(response.text).toMatchSnapshot();\n  });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}